Потоки Stream

Входные InputStream Reader
Исходящие OutputStream Writer

Байтовые потоки читают, записывают данные по байтам.Работа с изображениями, видео, аудио, архивы.

InputStream определяет метод для чтения
read() читает один байт и возвращает его как число 0 - 255 единиц или  - 1 если достигнут конец потока
read(byte[] byteArray) считывание в массив байтов
  close() закравает поток

OutputStream определяет метод для записи
write(int byte) записывает один байт
write(byte[]array) записывает массив байтов
   close() закравает поток

FileInputStream / FileOutputStream запись и чтение в файлы и из файлов
ByteArrayInputStream / ByteArrayOutputStream чтение и запись в и из массивов
BufferedInputStream / BufferedOutputStream обертка буферизации (данные считываются блоками и количество обращений к реальному источнику снижается)
(из за этого снижается нагрузка)
DataInputStream / DataOutputStream поднастройка для чтения, записи примитивных типов и строк в кодировке UTF


Символьные потоки читаю, записывают по символам, строкам. Работа с текстом, строками с учетом кодировки

Reader для чтения символов
read() читает один символ
read (char[] charArray) считывание в массив символов
close() закрывает поток

Writer для записи символов
write( int с ) записывает один символ
write(char[] array) записывает массив символов
close() закрывает поток

FileReader FileWriter   чтение и запись символов в  и из файла
BufferedReader BufferedWriter буферизованные версии чтения и записи
InputStreamReader OutputStreamReader мост между байтовыми и символьными потками, например кодировка
PrintWriter для форматированного вывода

Сериализация это преобразование обьекта в последовательность байтов ObjectOutputStream
Десериализация это восстановление обьекта из этой последовательности байтов ObjectInputStream

Интерфейс Serialiazable

Для сериализации: реальзовать в классе интерфейс Serialiazable
Поля, которые не должны сериализоваться нужно пометить словом transient
Рекомендуется указвать версию сериализации